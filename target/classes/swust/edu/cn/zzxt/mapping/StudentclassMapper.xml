<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="swust.edu.cn.zzxt.dao.StudentclassMapper">
	<resultMap id="BaseResultMap" type="swust.edu.cn.zzxt.model.Studentclass">
		<id column="class_id" property="classId" jdbcType="INTEGER" />
		<result column="class_majrId" property="classMajrid" jdbcType="INTEGER" />
		<result column="class_name" property="className" jdbcType="VARCHAR" />
		<result column="class_shortname" property="classShortname"
			jdbcType="VARCHAR" />
		<result column="class_instId" property="classInstid" jdbcType="INTEGER" />
		<result column="class_isSpecial" property="classIsspecial"
			jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="swust.edu.cn.zzxt.model.Studentclass"
		extends="BaseResultMap">
		<result column="class_description" property="classDescription"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		class_id, class_majrId, class_name, class_shortname, class_instId,
		class_isSpecial
	</sql>
	<sql id="Blob_Column_List">
		class_description
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from studentclass
		where class_id = #{classId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from studentclass
		where class_id = #{classId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="swust.edu.cn.zzxt.model.Studentclass">
		insert into studentclass (class_id, class_majrId, class_name,
		class_shortname, class_instId, class_isSpecial,
		class_description)
		values (#{classId,jdbcType=INTEGER}, #{classMajrid,jdbcType=INTEGER},
		#{className,jdbcType=VARCHAR},
		#{classShortname,jdbcType=VARCHAR}, #{classInstid,jdbcType=INTEGER}, #{classIsspecial,jdbcType=INTEGER},
		#{classDescription,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="swust.edu.cn.zzxt.model.Studentclass">
		insert into studentclass
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="classId != null">
				class_id,
			</if>
			<if test="classMajrid != null">
				class_majrId,
			</if>
			<if test="className != null">
				class_name,
			</if>
			<if test="classShortname != null">
				class_shortname,
			</if>
			<if test="classInstid != null">
				class_instId,
			</if>
			<if test="classIsspecial != null">
				class_isSpecial,
			</if>
			<if test="classDescription != null">
				class_description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="classId != null">
				#{classId,jdbcType=INTEGER},
			</if>
			<if test="classMajrid != null">
				#{classMajrid,jdbcType=INTEGER},
			</if>
			<if test="className != null">
				#{className,jdbcType=VARCHAR},
			</if>
			<if test="classShortname != null">
				#{classShortname,jdbcType=VARCHAR},
			</if>
			<if test="classInstid != null">
				#{classInstid,jdbcType=INTEGER},
			</if>
			<if test="classIsspecial != null">
				#{classIsspecial,jdbcType=INTEGER},
			</if>
			<if test="classDescription != null">
				#{classDescription,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="swust.edu.cn.zzxt.model.Studentclass">
		update studentclass
		<set>
			<if test="classMajrid != null">
				class_majrId = #{classMajrid,jdbcType=INTEGER},
			</if>
			<if test="className != null">
				class_name = #{className,jdbcType=VARCHAR},
			</if>
			<if test="classShortname != null">
				class_shortname = #{classShortname,jdbcType=VARCHAR},
			</if>
			<if test="classInstid != null">
				class_instId = #{classInstid,jdbcType=INTEGER},
			</if>
			<if test="classIsspecial != null">
				class_isSpecial = #{classIsspecial,jdbcType=INTEGER},
			</if>
			<if test="classDescription != null">
				class_description = #{classDescription,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where class_id = #{classId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="swust.edu.cn.zzxt.model.Studentclass">
		update studentclass
		set class_majrId = #{classMajrid,jdbcType=INTEGER},
		class_name = #{className,jdbcType=VARCHAR},
		class_shortname = #{classShortname,jdbcType=VARCHAR},
		class_instId = #{classInstid,jdbcType=INTEGER},
		class_isSpecial = #{classIsspecial,jdbcType=INTEGER},
		class_description = #{classDescription,jdbcType=LONGVARCHAR}
		where class_id = #{classId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="swust.edu.cn.zzxt.model.Studentclass">
		update studentclass
		set class_majrId = #{classMajrid,jdbcType=INTEGER},
		class_name = #{className,jdbcType=VARCHAR},
		class_shortname = #{classShortname,jdbcType=VARCHAR},
		class_instId = #{classInstid,jdbcType=INTEGER},
		class_isSpecial = #{classIsspecial,jdbcType=INTEGER}
		where class_id = #{classId,jdbcType=INTEGER}
	</update>
	
	<!-- 通过辅导员的id查询 -->
	<select id="selectByInstId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from studentclass
		where class_instId = #{instId,jdbcType=INTEGER}
	</select>
	
	
	<!-- 通过专业id查询 -->
	<select id="selectByMajorId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from studentclass
		where class_majrId = #{majrId,jdbcType=INTEGER}
	</select>


	<!-- 通过班级名称查询 -->
	<select id="findClassIdByClassName" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from studentclass
		where class_name = #{className,jdbcType=VARCHAR}
	</select>

	<!-- 通过学院的id查询 -->
	<select id="selectByInstitutionId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from studentclass,
		major
		where major.majr_instId = #{instId,jdbcType=INTEGER}
		and class_majrId = major.majr_id
	</select>


</mapper>