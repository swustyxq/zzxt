<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="swust.edu.cn.zzxt.dao.FunctionMapper" >
  <resultMap id="BaseResultMap" type="swust.edu.cn.zzxt.model.Function" >
    <id column="func_id" property="funcId" jdbcType="INTEGER" />
    <result column="func_name" property="funcName" jdbcType="VARCHAR" />
    <result column="func_parentId" property="funcParentid" jdbcType="INTEGER" />
    <result column="func_url" property="funcUrl" jdbcType="VARCHAR" />
    <result column="func_type" property="funcType" jdbcType="VARCHAR" />
    <result column="func_ordinal" property="funcOrdinal" jdbcType="INTEGER" />
    <result column="func_workId" property="funcWorkid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="swust.edu.cn.zzxt.model.Function" extends="BaseResultMap" >
    <result column="func_description" property="funcDescription" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    func_id, func_name, func_parentId, func_url, func_type, func_ordinal, func_workId
  </sql>
  <sql id="Blob_Column_List" >
    func_description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from function
    where func_id = #{funcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from function
    where func_id = #{funcId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="swust.edu.cn.zzxt.model.Function" >
    insert into function (func_id, func_name, func_parentId, 
      func_url, func_type, func_ordinal, 
      func_workId, func_description)
    values (#{funcId,jdbcType=INTEGER}, #{funcName,jdbcType=VARCHAR}, #{funcParentid,jdbcType=INTEGER}, 
      #{funcUrl,jdbcType=VARCHAR}, #{funcType,jdbcType=VARCHAR}, #{funcOrdinal,jdbcType=INTEGER}, 
      #{funcWorkid,jdbcType=INTEGER}, #{funcDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="swust.edu.cn.zzxt.model.Function" >
    insert into function
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="funcId != null" >
        func_id,
      </if>
      <if test="funcName != null" >
        func_name,
      </if>
      <if test="funcParentid != null" >
        func_parentId,
      </if>
      <if test="funcUrl != null" >
        func_url,
      </if>
      <if test="funcType != null" >
        func_type,
      </if>
      <if test="funcOrdinal != null" >
        func_ordinal,
      </if>
      <if test="funcWorkid != null" >
        func_workId,
      </if>
      <if test="funcDescription != null" >
        func_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="funcId != null" >
        #{funcId,jdbcType=INTEGER},
      </if>
      <if test="funcName != null" >
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcParentid != null" >
        #{funcParentid,jdbcType=INTEGER},
      </if>
      <if test="funcUrl != null" >
        #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcType != null" >
        #{funcType,jdbcType=VARCHAR},
      </if>
      <if test="funcOrdinal != null" >
        #{funcOrdinal,jdbcType=INTEGER},
      </if>
      <if test="funcWorkid != null" >
        #{funcWorkid,jdbcType=INTEGER},
      </if>
      <if test="funcDescription != null" >
        #{funcDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="swust.edu.cn.zzxt.model.Function" >
    update function
    <set >
      <if test="funcName != null" >
        func_name = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcParentid != null" >
        func_parentId = #{funcParentid,jdbcType=INTEGER},
      </if>
      <if test="funcUrl != null" >
        func_url = #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcType != null" >
        func_type = #{funcType,jdbcType=VARCHAR},
      </if>
      <if test="funcOrdinal != null" >
        func_ordinal = #{funcOrdinal,jdbcType=INTEGER},
      </if>
      <if test="funcWorkid != null" >
        func_workId = #{funcWorkid,jdbcType=INTEGER},
      </if>
      <if test="funcDescription != null" >
        func_description = #{funcDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where func_id = #{funcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="swust.edu.cn.zzxt.model.Function" >
    update function
    set func_name = #{funcName,jdbcType=VARCHAR},
      func_parentId = #{funcParentid,jdbcType=INTEGER},
      func_url = #{funcUrl,jdbcType=VARCHAR},
      func_type = #{funcType,jdbcType=VARCHAR},
      func_ordinal = #{funcOrdinal,jdbcType=INTEGER},
      func_workId = #{funcWorkid,jdbcType=INTEGER},
      func_description = #{funcDescription,jdbcType=LONGVARCHAR}
    where func_id = #{funcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="swust.edu.cn.zzxt.model.Function" >
    update function
    set func_name = #{funcName,jdbcType=VARCHAR},
      func_parentId = #{funcParentid,jdbcType=INTEGER},
      func_url = #{funcUrl,jdbcType=VARCHAR},
      func_type = #{funcType,jdbcType=VARCHAR},
      func_ordinal = #{funcOrdinal,jdbcType=INTEGER},
      func_workId = #{funcWorkid,jdbcType=INTEGER}
    where func_id = #{funcId,jdbcType=INTEGER}
  </update>
  <select id="selectAllfunction" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from function
  </select>

  
</mapper>