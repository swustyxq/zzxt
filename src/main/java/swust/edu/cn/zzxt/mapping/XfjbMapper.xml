<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="swust.edu.cn.zzxt.dao.XfjbMapper">
	<resultMap id="BaseResultMap" type="swust.edu.cn.zzxt.model.Xfjb">
		<id column="xfjb_id" property="xfjbId" jdbcType="INTEGER" />
		<result column="xfjb_content" property="xfjbContent" jdbcType="VARCHAR" />
		<result column="xfjb_hasGot" property="xfjbHasgot" jdbcType="VARCHAR" />
		<result column="xfjb_amount" property="xfjbAmount" jdbcType="VARCHAR" />
		<result column="xfjb_time" property="xfjbTime" jdbcType="VARCHAR" />
		<result column="xfjb_studId" property="xfjbStudid" jdbcType="INTEGER" />
		<result column="xfjb_workId" property="xfjbWorkid" jdbcType="INTEGER" />
		<result column="xfjb_wsflId" property="xfjbWsflid" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		xfjb_id, xfjb_content, xfjb_hasGot, xfjb_amount, xfjb_time,
		xfjb_studId,
		xfjb_workId,
		xfjb_wsflId
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from xfjb
		where xfjb_id = #{xfjbId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from xfjb
		where xfjb_id = #{xfjbId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="swust.edu.cn.zzxt.model.Xfjb">
		insert into xfjb (xfjb_id,
		xfjb_content, xfjb_hasGot,
		xfjb_amount, xfjb_time, xfjb_studId,
		xfjb_workId, xfjb_wsflId)
		values (#{xfjbId,jdbcType=INTEGER},
		#{xfjbContent,jdbcType=VARCHAR},
		#{xfjbHasgot,jdbcType=VARCHAR},
		#{xfjbAmount,jdbcType=VARCHAR}, #{xfjbTime,jdbcType=VARCHAR},
		#{xfjbStudid,jdbcType=INTEGER},
		#{xfjbWorkid,jdbcType=INTEGER},
		#{xfjbWsflid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="swust.edu.cn.zzxt.model.Xfjb">
		insert into xfjb
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="xfjbId != null">
				xfjb_id,
			</if>
			<if test="xfjbContent != null">
				xfjb_content,
			</if>
			<if test="xfjbHasgot != null">
				xfjb_hasGot,
			</if>
			<if test="xfjbAmount != null">
				xfjb_amount,
			</if>
			<if test="xfjbTime != null">
				xfjb_time,
			</if>
			<if test="xfjbStudid != null">
				xfjb_studId,
			</if>
			<if test="xfjbWorkid != null">
				xfjb_workId,
			</if>
			<if test="xfjbWsflid != null">
				xfjb_wsflId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="xfjbId != null">
				#{xfjbId,jdbcType=INTEGER},
			</if>
			<if test="xfjbContent != null">
				#{xfjbContent,jdbcType=VARCHAR},
			</if>
			<if test="xfjbHasgot != null">
				#{xfjbHasgot,jdbcType=VARCHAR},
			</if>
			<if test="xfjbAmount != null">
				#{xfjbAmount,jdbcType=VARCHAR},
			</if>
			<if test="xfjbTime != null">
				#{xfjbTime,jdbcType=VARCHAR},
			</if>
			<if test="xfjbStudid != null">
				#{xfjbStudid,jdbcType=INTEGER},
			</if>
			<if test="xfjbWorkid != null">
				#{xfjbWorkid,jdbcType=INTEGER},
			</if>
			<if test="xfjbWsflid != null">
				#{xfjbWsflid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="swust.edu.cn.zzxt.model.Xfjb">
		update xfjb
		<set>
			<if test="xfjbContent != null">
				xfjb_content = #{xfjbContent,jdbcType=VARCHAR},
			</if>
			<if test="xfjbHasgot != null">
				xfjb_hasGot = #{xfjbHasgot,jdbcType=VARCHAR},
			</if>
			<if test="xfjbAmount != null">
				xfjb_amount = #{xfjbAmount,jdbcType=VARCHAR},
			</if>
			<if test="xfjbTime != null">
				xfjb_time = #{xfjbTime,jdbcType=VARCHAR},
			</if>
			<if test="xfjbStudid != null">
				xfjb_studId = #{xfjbStudid,jdbcType=INTEGER},
			</if>
			<if test="xfjbWorkid != null">
				xfjb_workId = #{xfjbWorkid,jdbcType=INTEGER},
			</if>
			<if test="xfjbWsflid != null">
				xfjb_wsflId = #{xfjbWsflid,jdbcType=INTEGER},
			</if>
		</set>
		where xfjb_id = #{xfjbId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="swust.edu.cn.zzxt.model.Xfjb">
		update xfjb
		set
		xfjb_content = #{xfjbContent,jdbcType=VARCHAR},
		xfjb_hasGot =
		#{xfjbHasgot,jdbcType=VARCHAR},
		xfjb_amount =
		#{xfjbAmount,jdbcType=VARCHAR},
		xfjb_time =
		#{xfjbTime,jdbcType=VARCHAR},
		xfjb_studId =
		#{xfjbStudid,jdbcType=INTEGER},
		xfjb_workId =
		#{xfjbWorkid,jdbcType=INTEGER},
		xfjb_wsflId =
		#{xfjbWsflid,jdbcType=INTEGER}
		where xfjb_id =
		#{xfjbId,jdbcType=INTEGER}
	</update>

	<!-- 查找辅导员所带的获得学费奖补的学生 -->
	<select id="findAllXfjbListByinstUserId" resultType="swust.edu.cn.zzxt.selfmodel.XfjbListModel"
		parameterType="java.lang.Integer">
		select
		x.xfjb_id as xfjbId,
		x.xfjb_content as xfjbContent,
		x.xfjb_hasGot as xfjbHasgot,
		x.xfjb_amount as xfjbAmount,
		x.xfjb_time as
		xfjbTime,
		x.xfjb_studId as xfjbStudid,
		x.xfjb_workId as xfjbWorkid,
		x.xfjb_wsflId as xfjbWsflid,
		p.inst_id as colleageId,
		p.inst_name as
		instName,
		o.majr_id as majorId,
		o.majr_name as majrName,
		n.class_id as
		classId,
		n.class_name as className,
		m.stud_name as stuName,
		m.stud_number as stuNumber
		from
		user u,
		instructor i,
		institution p,
		major
		o,
		studentclass n,
		student m,
		xfjb x
		where
		u.user_id=
		#{userId,jdbcType=INTEGER}
		AND u.user_id=i.inst_userId
		AND
		i.inst_id=n.class_instId
		AND n.class_id=m.stud_classId
		AND p.inst_id =
		o.majr_instId
		AND o.majr_id = n.class_majrId
		AND m.stud_id =
		x.xfjb_studId
	</select>
	<!-- 查找学院的所有获得学费奖补的学生 -->
	<select id="findAllXfjbListByinstId" resultType="swust.edu.cn.zzxt.selfmodel.XfjbListModel"
		parameterType="java.lang.Integer">
		select
		x.xfjb_id as xfjbId,
		x.xfjb_content as xfjbContent,
		x.xfjb_hasGot as xfjbHasgot,
		x.xfjb_amount as xfjbAmount,
		x.xfjb_time as
		xfjbTime,
		x.xfjb_studId as xfjbStudid,
		x.xfjb_workId as xfjbWorkid,
		x.xfjb_wsflId as xfjbWsflid,
		p.inst_id as colleageId,
		p.inst_name as
		instName,
		o.majr_id as majorId,
		o.majr_name as majrName,
		n.class_id as
		classId,
		n.class_name as className,
		m.stud_name as stuName,
		m.stud_number as stuNumber
		from institution p,
		major o,
		studentclass n,
		student m,
		xfjb x
		where
		p.inst_id = #{colleageId,jdbcType=INTEGER}
		and
		p.inst_id = o.majr_instId
		and o.majr_id = n.class_majrId
		and n.class_id
		= m.stud_classId
		and m.stud_id = x.xfjb_studId
	</select>

	<!-- 查找全部学费奖补的学生 -->
	<select id="findAllXfjbListByAll" resultType="swust.edu.cn.zzxt.selfmodel.XfjbListModel">
		select
		x.xfjb_id as
		xfjbId,
		x.xfjb_content as xfjbContent,
		x.xfjb_hasGot as xfjbHasgot,
		x.xfjb_amount as xfjbAmount,
		x.xfjb_time as xfjbTime,
		x.xfjb_studId as
		xfjbStudid,
		x.xfjb_workId as xfjbWorkid,
		x.xfjb_wsflId as xfjbWsflid,
		p.inst_id as colleageId,
		p.inst_name as instName,
		o.majr_id as majorId,
		o.majr_name as majrName,
		n.class_id as classId,
		n.class_name as
		className,
		m.stud_name as stuName,
		m.stud_number as stuNumber
		from
		institution p,
		major o,
		studentclass n,
		student m,
		xfjb x
		where
		p.inst_id =
		o.majr_instId
		and o.majr_id = n.class_majrId
		and n.class_id =
		m.stud_classId
		and m.stud_id = x.xfjb_studId
	</select>

	<!-- 根据前台筛选条件查询学费奖补学生 -->
	<select id="findJbByConditions" resultType="swust.edu.cn.zzxt.selfmodel.XfjbListModel"
		parameterType="swust.edu.cn.zzxt.selfmodel.XfjbListModel">
		select
		x.xfjb_id as xfjbId,
		x.xfjb_content as xfjbContent,
		x.xfjb_hasGot as xfjbHasgot,
		x.xfjb_amount as xfjbAmount,
		x.xfjb_time as
		xfjbTime,
		x.xfjb_studId as xfjbStudid,
		x.xfjb_workId as xfjbWorkid,
		x.xfjb_wsflId as xfjbWsflid,
		p.inst_id as colleageId,
		p.inst_name as
		instName,
		o.majr_id as majorId,
		o.majr_name as majrName,
		n.class_id as
		classId,
		n.class_name as className,
		m.stud_name as stuName,
		m.stud_number as stuNumber
		from institution p,
		major o,
		studentclass n,
		student m,
		xfjb x
		where
		p.inst_id = o.majr_instId
		and o.majr_id =
		n.class_majrId
		and n.class_id = m.stud_classId
		and m.stud_id =
		x.xfjb_studId
		and if(0=#{colleageId,jdbcType=INTEGER},true,p.inst_id =
		#{colleageId,jdbcType=INTEGER})
		and
		if(0=#{classId,jdbcType=INTEGER},true,n.class_id =
		#{classId,jdbcType=INTEGER})
		and
		if(0=#{majorId,jdbcType=INTEGER},true,o.majr_id =
		#{majorId,jdbcType=INTEGER})
	</select>
	<select id="findXfjbInfoByStuId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from xfjb
		where xfjb_studId = #{xfjbStudid,jdbcType=INTEGER}
	</select>
	<select id="findJbListByStudentId" resultType="swust.edu.cn.zzxt.selfmodel.XfjbListModel"
		parameterType="java.lang.Integer">
		select
		x.xfjb_id as xfjbId,
		x.xfjb_content as xfjbContent,
		x.xfjb_hasGot as xfjbHasgot,
		x.xfjb_amount as xfjbAmount,
		x.xfjb_time as
		xfjbTime,
		x.xfjb_studId as xfjbStudid,
		x.xfjb_workId as xfjbWorkid,
		x.xfjb_wsflId as xfjbWsflid,
		p.inst_id as colleageId,
		p.inst_name as
		instName,
		o.majr_id as majorId,
		o.majr_name as majrName,
		n.class_id as
		classId,
		n.class_name as className,
		m.stud_name as stuName,
		m.stud_number as stuNumber
		from institution p,
		major o,
		studentclass n,
		student m,
		xfjb x
		where
		p.inst_id = o.majr_instId
		and o.majr_id =
		n.class_majrId
		and n.class_id = m.stud_classId
		and m.stud_id =
		x.xfjb_studId
		and x.xfjb_studId = #{xfjbStudid,jdbcType=INTEGER}
	</select>
	<!-- 通过班级Id查询学费奖补学生 -->
	<select id="findXfjbListByClassId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		FROM
		student , studentclass ,xfjb
		WHERE
		student.stud_classId
		=studentclass.class_id
		and student.stud_id = xfjb.xfjb_studId
		and
		studentclass.class_id=#{classId,jdbcType=INTEGER}
	</select>
	<!-- 通过专业Id查询学费奖补学生 -->
	<select id="findXfjbListByMajorId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		FROM
		student,studentclass,major,xfjb
		where
		student.stud_classId=studentclass.class_id
		and
		studentclass.class_majrId=major.majr_id
		and student.stud_id =
		xfjb.xfjb_studId
		and major.majr_id == #{majrId,jdbcType=INTEGER}
	</select>

	<select id="findXfjbListByInsId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		FROM
		student,studentclass,major,xfjb,institution
		where
		student.stud_classId=studentclass.class_id
		and studentclass.class_majrId=major.majr_id
		and major.majr_instId = institution.inst_id
		and student.stud_id = xfjb.xfjb_studId
		and institution.inst_id=#{instId,jdbcType=INTEGER}
	</select>

</mapper>