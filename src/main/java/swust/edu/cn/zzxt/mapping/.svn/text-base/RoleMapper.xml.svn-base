<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="swust.edu.cn.zzxt.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="swust.edu.cn.zzxt.model.Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_level" property="roleLevel" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="swust.edu.cn.zzxt.model.Role" extends="BaseResultMap" >
    <result column="role_description" property="roleDescription" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_level
  </sql>
  <sql id="Blob_Column_List" >
    role_description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="swust.edu.cn.zzxt.model.Role" >
    insert into role (role_id, role_name, role_level, 
      role_description)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleLevel,jdbcType=INTEGER}, 
      #{roleDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="swust.edu.cn.zzxt.model.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleLevel != null" >
        role_level,
      </if>
      <if test="roleDescription != null" >
        role_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        #{roleLevel,jdbcType=INTEGER},
      </if>
      <if test="roleDescription != null" >
        #{roleDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="swust.edu.cn.zzxt.model.Role" >
    update role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        role_level = #{roleLevel,jdbcType=INTEGER},
      </if>
      <if test="roleDescription != null" >
        role_description = #{roleDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="swust.edu.cn.zzxt.model.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_level = #{roleLevel,jdbcType=INTEGER},
      role_description = #{roleDescription,jdbcType=LONGVARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="swust.edu.cn.zzxt.model.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_level = #{roleLevel,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
<!--   selectAllRole  -->
  <select id="selectAllRole" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
  </select>
</mapper>